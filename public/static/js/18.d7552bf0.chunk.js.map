{"version":3,"sources":["users/pages/UsersTercera.js"],"names":["UsersTercera","useHttpClient","isLoading","error","sendRequest","clearError","auth","useContext","AuthContext","useState","loadedUsers","setLoadedUsers","useEffect","a","process","responseData","users","fetchUsers","Fragment","onClear","isLoggedIn","className","items","filter","user","division"],"mappings":"kNAqDeA,UA7CM,WACnB,MAAsDC,cAA9CC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,MAAOC,EAA1B,EAA0BA,YAAaC,EAAvC,EAAuCA,WACjCC,EAAOC,qBAAWC,KACxB,EAAsCC,qBAAtC,mBAAOC,EAAP,KAAoBC,EAApB,KAwBA,OAtBAC,qBAAU,YACQ,uCAAG,4BAAAC,EAAA,+EAEYT,EACzBU,+CAHa,OAETC,EAFS,OAMfJ,EAAeI,EAAaC,OANb,uGAAH,qDAkBhBC,KACC,CAACb,IAGF,kBAAC,IAAMc,SAAP,KACE,kBAAC,IAAD,CAAYf,MAAOA,EAAOgB,QAASd,IAClCC,EAAKc,YAAc,kBAAC,IAAD,MACnBlB,GACC,yBAAKmB,UAAU,UACb,kBAAC,IAAD,QAGFnB,GAAaQ,GACb,kBAAC,IAAD,CACEY,MAAOZ,EAAYa,QAAO,SAACC,GAAD,MAA4B,YAAlBA,EAAKC","file":"static/js/18.d7552bf0.chunk.js","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\nimport Presupuesto from \"../../shared/components/Navigation/Presupuesto\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport UsersList from \"../components/UsersList\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\n\nconst UsersTercera = () => {\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const auth = useContext(AuthContext);\n  const [loadedUsers, setLoadedUsers] = useState();\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        const responseData = await sendRequest(\n          process.env.REACT_APP_BACKEND_URL + \"/users\"\n        );\n\n        setLoadedUsers(responseData.users);\n\n        /* const userHasOffers = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/ofertas/get/receivedOffers/${auth.userId}`\n        );\n\n        var existing = localStorage.getItem(\"userData\");\n        existing = JSON.parse(existing);\n        existing.hasOffers = userHasOffers;\n        localStorage.setItem(\"userData\", JSON.stringify(existing)); */\n      } catch (err) {}\n    };\n    fetchUsers();\n  }, [sendRequest]);\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      {auth.isLoggedIn && <Presupuesto></Presupuesto>}\n      {isLoading && (\n        <div className=\"center\">\n          <LoadingSpinner />\n        </div>\n      )}\n      {!isLoading && loadedUsers && (\n        <UsersList\n          items={loadedUsers.filter((user) => user.division === \"Tercera\")}\n        />\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default UsersTercera;\n"],"sourceRoot":""}