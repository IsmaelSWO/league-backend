{"version":3,"sources":["players/pages/MercadoPlayers.js"],"names":["MercadoPlayers","useHttpClient","isLoading","error","sendRequest","clearError","useState","loadedPlayers","setLoadedPlayers","update","setUpdate","auth","useContext","AuthContext","useEffect","a","process","responseData","players","fetchUsers","Fragment","onClear","isLoggedIn","className","items","onUpdate","onDeletePlayer","deletedPlayerId","prevPlayers","filter","player","id"],"mappings":"kNAkEeA,UAzDQ,WACrB,MAAsDC,cAA9CC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,MAAOC,EAA1B,EAA0BA,YAAaC,EAAvC,EAAuCA,WACvC,EAA0CC,qBAA1C,mBAAOC,EAAP,KAAsBC,EAAtB,KACA,EAA4BF,oBAAS,GAArC,mBAAOG,EAAP,KAAeC,EAAf,KACMC,EAAOC,qBAAWC,KAExBC,qBAAU,YACQ,uCAAG,4BAAAC,EAAA,+EAEYX,EACzBY,yDAHa,OAETC,EAFS,OAMfT,EAAiBS,EAAaC,SANf,uGAAH,qDAiBhBC,KACC,CAACf,EAAaK,IAUjB,OACE,kBAAC,IAAMW,SAAP,KACE,kBAAC,IAAD,CAAYjB,MAAOA,EAAOkB,QAAShB,IAClCM,EAAKW,aAAepB,GAAaK,GAChC,kBAAC,IAAD,MAEDL,GACC,yBAAKqB,UAAU,UACb,kBAAC,IAAD,QAGFrB,GAAaK,GACb,kBAAC,IAAD,CACEiB,MAAOjB,EACPkB,SAlBc,WACpBf,GAAWD,IAkBLiB,eAxBqB,SAACC,GAC5BnB,GAAiB,SAACoB,GAAD,OACfA,EAAYC,QAAO,SAACC,GAAD,OAAYA,EAAOC,KAAOJ","file":"static/js/12.437c5af6.chunk.js","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\n\nimport PlayerList from \"../components/PlayerList\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport Presupuesto from \"../../shared/components/Navigation/Presupuesto\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\n\nconst MercadoPlayers = () => {\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [loadedPlayers, setLoadedPlayers] = useState();\n  const [update, setUpdate] = useState(false);\n  const auth = useContext(AuthContext);\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        const responseData = await sendRequest(\n          process.env.REACT_APP_BACKEND_URL + \"/players/mercado\"\n        );\n\n        setLoadedPlayers(responseData.players);\n        /* const userHasOffers = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/ofertas/get/receivedOffers/${auth.userId}`\n        );\n\n        var existing = localStorage.getItem(\"userData\");\n        existing = JSON.parse(existing);\n        existing.hasOffers = userHasOffers;\n        localStorage.setItem(\"userData\", JSON.stringify(existing)); */\n      } catch (err) {}\n    };\n    fetchUsers();\n  }, [sendRequest, update]);\n  const playerDeletedHandler = (deletedPlayerId) => {\n    setLoadedPlayers((prevPlayers) =>\n      prevPlayers.filter((player) => player.id !== deletedPlayerId)\n    );\n  };\n  const updateHandler = () => {\n    setUpdate(!update);\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      {auth.isLoggedIn && !isLoading && loadedPlayers && (\n        <Presupuesto></Presupuesto>\n      )}\n      {isLoading && (\n        <div className=\"center\">\n          <LoadingSpinner />\n        </div>\n      )}\n      {!isLoading && loadedPlayers && (\n        <PlayerList\n          items={loadedPlayers}\n          onUpdate={updateHandler}\n          onDeletePlayer={playerDeletedHandler}\n        />\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default MercadoPlayers;\n"],"sourceRoot":""}